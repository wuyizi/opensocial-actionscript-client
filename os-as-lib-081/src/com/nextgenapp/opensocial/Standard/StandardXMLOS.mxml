<?xml version="1.0" encoding="utf-8"?>
<!-- StandardXMLOS maps Actionscript requests to Javascript Requests -->
<mx:XMLListCollection xmlns:mx="http://www.adobe.com/2006/mxml" >
		<!-- Setting up static functions here -->
		<mx:XML id="init">
		<script>
        <![CDATA[
            function(){
                //Create a name space for our global function
                //if it doesn't already exists
                try {
                    NextGenApp;
                } catch(e) {
                    NextGenApp = new Object(); 
                }

				//TODO: checks to see if the variable exists before defining it
				
                NextGenApp.fillPeopleRequestFields = function (parameter) {
                    	var params = new Array();
                    	for (i in parameter){
                    		switch(parameter[i]){
                    		case 'ABOUT_ME':
                    			params[i] = opensocial.Person.Field.ABOUT_ME;
                    			break;
                    		case 'ACTIVITIES':
                    			params[i] = opensocial.Person.Field.ACTIVITIES;
                    			break;
                    		case 'ADDRESSES':
                    			params[i] = opensocial.Person.Field.ADDRESSES;
                    			break;
                    		case 'AGE':
                    			params[i] = opensocial.Person.Field.AGE;
                    			break;
                    		case 'BODY_TYPE':
                    			params[i] = opensocial.Person.Field.BODY_TYPE;
                    			break;
                    		case 'BOOKS':
                    			params[i] = opensocial.Person.Field.BOOKS;
                    			break;
                    		case 'CARS':
                    			params[i] = opensocial.Person.Field.CARS;
                    			break;
                    		case 'CHILDREN':
                    			params[i] = opensocial.Person.Field.CHILDREN;
                    			break;
                    		case 'CURRENT_LOCATION':
                    			params[i] = opensocial.Person.Field.CURRENT_LOCATION;
                    			break;
                    		case 'DATE_OF_BIRTH':
                    			params[i] = opensocial.Person.Field.DATE_OF_BIRTH;
                    			break;
                    		case 'DRINKER':
                    			params[i] = opensocial.Person.Field.DRINKER;
                    			break;
                    		case 'EMAILS':
                    			params[i] = opensocial.Person.Field.EMAILS;
                    			break;
                    		case 'ETHNICITY':
                    			params[i] = opensocial.Person.Field.ETHNICITY;
                    			break;
                    		case 'FASHION':
                    			params[i] = opensocial.Person.Field.FASHION;
                    			break;
                    		case 'FOOD':
                    			params[i] = opensocial.Person.Field.FOOD;
                    			break;
                    		case 'GENDER':
                    			params[i] = opensocial.Person.Field.GENDER;
                    			break;
                    		case 'HAPPIEST_WHEN':
                    			params[i] = opensocial.Person.Field.HAPPIEST_WHEN;
                    			break;
                    		case 'HAS_APP':
                    			params[i] = opensocial.Person.Field.HAS_APP;
                    			break;
                    		case 'HEROES':
                    			params[i] = opensocial.Person.Field.HEROES;
                    			break;
                    		case 'HUMOR':
                    			params[i] = opensocial.Person.Field.HUMOR;
                    			break;
                    		case 'ID':
                    			params[i] = opensocial.Person.Field.ID;
                    			break;
                    		case 'INTERESTS':
                    			params[i] = opensocial.Person.Field.INTERESTS;
                    			break;
                    		case 'JOB_INTERESTS':
                    			params[i] = opensocial.Person.Field.JOB_INTERESTS;
                    			break;
                    		case 'JOBS':
                    			params[i] = opensocial.Person.Field.JOBS;
                    			break;
                    		case 'LANGUAGES_SPOKEN':
                    			params[i] = opensocial.Person.Field.LANGUAGES_SPOKEN;
                    			break;
                    		case 'LIVING_ARRANGEMENT':
                    			params[i] = opensocial.Person.Field.LIVING_ARRANGEMENT;
                    			break;
                    		case 'LOOKING_FOR':
                    			params[i] = opensocial.Person.Field.LOOKING_FOR;
                    			break;
                    		case 'MOVIES':
                    			params[i] = opensocial.Person.Field.MOVIES;
                    			break;
                    		case 'MUSIC':
                    			params[i] = opensocial.Person.Field.MUSIC;
                    			break;
                    		case 'NAME':
                    			params[i] = opensocial.Person.Field.NAME;
                    			break;
                    		case 'NETWORK_PRESENCE':
                    			params[i] = opensocial.Person.Field.NETWORK_PRESENCE;
                    			break;
                    		case 'NICKNAME':
                    			params[i] = opensocial.Person.Field.NICKNAME;
                    			break;
                    		case 'PETS':
                    			params[i] = opensocial.Person.Field.PETS;
                    			break;
                    		case 'PHONE_NUMBERS':
                    			params[i] = opensocial.Person.Field.PHONE_NUMBERS;
                    			break;
                    		case 'POLITICAL_VIEWS':
                    			params[i] = opensocial.Person.Field.POLITICAL_VIEWS;
                    			break;
                    		case 'PROFILE_SONG':
                    			params[i] = opensocial.Person.Field.PROFILE_SONG;
                    			break;
                    		case 'PROFILE_URL':
                    			params[i] = opensocial.Person.Field.PROFILE_URL;
                    			break;
                    		case 'PROFILE_VIDEO':
                    			params[i] = opensocial.Person.Field.PROFILE_VIDEO;
                    			break;
                    		case 'QUOTES':
                    			params[i] = opensocial.Person.Field.QUOTES;
                    			break;
                    		case 'RELATIONSHIP_STATUS':
                    			params[i] = opensocial.Person.Field.RELATIONSHIP_STATUS;
                    			break;
                    		case 'RELIGION':
                    			params[i] = opensocial.Person.Field.RELIGION;
                    			break;
                    		case 'ROMANCE':
                    			params[i] = opensocial.Person.Field.ROMANCE;
                    			break;
                    		case 'SCARED_OF':
                    			params[i] = opensocial.Person.Field.SCARED_OF;
                    			break;
                    		case 'SCHOOLS':
                    			params[i] = opensocial.Person.Field.SCHOOLS;
                    			break;
                    		case 'SEXUAL_ORIENTATION':
                    			params[i] = opensocial.Person.Field.SEXUAL_ORIENTATION;
                    			break;
                    		case 'SMOKER':
                    			params[i] = opensocial.Person.Field.SMOKER;
                    			break;
                    		case 'SPORTS':
                    			params[i] = opensocial.Person.Field.SPORTS;
                    			break;
                    		case 'STATUS':
                    			params[i] = opensocial.Person.Field.STATUS;
                    			break;
                    		case 'TAGS':
                    			params[i] = opensocial.Person.Field.TAGS;
                    			break;
                    		case 'THUMBNAIL_URL':
                    			params[i] = opensocial.Person.Field.THUMBNAIL_URL;
                    			break;
                    		case 'TIME_ZONE':
                    			params[i] = opensocial.Person.Field.TIME_ZONE;
                    			break;
                    		case 'TURN_OFFS':
                    			params[i] = opensocial.Person.Field.TURN_OFFS;
                    			break;
                    		case 'TURN_ONS':
                    			params[i] = opensocial.Person.Field.TURN_ONS;
                    			break;
                    		case 'TV_SHOWS':
                    			params[i] = opensocial.Person.Field.TV_SHOWS;
                    			break;
                    		case 'URLS':
                    			params[i] = opensocial.Person.Field.URLS;
                    			break;
                    		default:
                    			params[i] = params[i];
                    			alert('params field not found: '+i+'.  value='+params[i]);
                    			break;
                    		}
                    	}//for
                    	return params;
                    }//getOSParams
            }
        ]]>
	    </script>
		</mx:XML>

		<!-- Start of OPENSOCIAL CALLS here -->
	   	<mx:XML id="fetchPersonRequest" xmlns="http://www.nextgenapp.com/opensocial/flex/api" >  
   		<script>
		<![CDATA[
			function(objParam)
			{	
				function fetchPerson(oParam){  	
					for (var tempname in oParam) {
						alert(tempname+'='+oParam[tempname]);
					}
					
					if (oParam.view == 'VIEWER') {
						oParam.view = opensocial.IdSpec.PersonId.VIEWER;
					} else if (oParam.view == 'OWNER') {
						oParam.view = opensocial.IdSpec.PersonId.OWNER;
					}
					
					for (var tempname in oParam) {
						alert(tempname+'='+oParam[tempname]);
					}
				
					var os = opensocial.Container.get();
	  				var dataRequest = opensocial.newDataRequest();
	  				var param = {};
	  				//lets fill out the params
	  				if ( oParam.params != undefined ){
		  				for (var i in oParam.params){
		  					switch (i){
		  					case 'PROFILE_DETAILS':
		  						param[opensocial.DataRequest.PeopleRequestFields.PROFILE_DETAILS] = NextGenApp.fillPeopleRequestFields(oParam.params[i]);
		  						//use this as cache for the response
		  						oParam.osParam = param[opensocial.DataRequest.PeopleRequestFields.PROFILE_DETAILS];
		  					break;
		  					default:
		  						//not supported. throw an exception
		  						var mesg = "Error. DataRequest.PeopleRequestFields = " + i + " is not supported.";
		  						throw mesg;
		  					}//switch
		  				}//for
	  				}
					
					var OWNERReq = dataRequest.newFetchPersonRequest(oParam.view, param);
					dataRequest.add(OWNERReq, oParam.view);
					dataRequest.send(getResponse);

					function getResponse(response)
					{
						alert('getResponse(): flash obj name='+oParam.name+'.  view='+oParam.view+".  response="+response);
						
						var flashobj = document.getElementById(oParam.name);
						alert('2');
						var OWNER = response.get(oParam.view).getData();
						alert('3');
						var returnData = {};
						alert('4');
						returnData.data = {};
						//tells whether viewer or owner
						alert('5');
						returnData.isViewer = OWNER.isViewer();
						alert('6');
						returnData.isOwner = OWNER.isOwner();
						alert('7');
						//returnData.errMesg = response.getErrorMessage();
						//returnData.hadError = response.hadError();
						returnData.owner = {};
						alert('8');
						returnData.owner.name = OWNER.getField(opensocial.Person.Field.NAME);
						alert('9');
						returnData.owner.age = OWNER.getField(opensocial.Person.Field.AGE);
						alert('10');
						returnData.owner.myArray = ['AGE', 'NAME', 'FIELD'];
						alert('11');
						returnData.owner.osParam = oParam.osParam;
						alert('12');



  						//get the array of the profile details
  						var profDet = oParam.params['PROFILE_DETAILS'];
  						alert('15');
  						for (var j in profDet){
  						alert('16');
  							switch(profDet[j]) {
  							alert('100');
  							case 'NAME':
  								alert('110');
  								var tmpName = OWNER.getField(oParam.osParam[j]);
  								alert('120');
  								returnData.data['NAME'].ADDITIONAL_NAME = tmpName.getField(opensocial.Name.Field.ADDITIONAL_NAME);
  								alert('130');
  								returnData.data['NAME'].FAMILY_NAME = tmpName.getField(opensocial.Name.Field.FAMILY_NAME);
  								alert('140');
  								returnData.data['NAME'].GIVEN_NAME = tmpName.getField(opensocial.Name.Field.GIVEN_NAME);
  								alert('150');
  								returnData.data['NAME'].HONORIFIC_PREFIX = tmpName.getField(opensocial.Name.Field.HONORIFIC_PREFIX);
  								alert('160');
  								returnData.data['NAME'].HONORIFIC_SUFFIX = tmpName.getField(opensocial.Name.Field.HONORIFIC_SUFFIX);
  								alert('170');
  								returnData.data['NAME'].UNSTRUCTURED = tmpName.getField(opensocial.Name.Field.UNSTRUCTURED);
  								alert('180');
  								
  							break;
  							//case 'GENDER':
  							//break;
  							default:
  								returnData.data[profDet[j]] = OWNER.getField(oParam.osParam[j]);
  							break;
  							} // switch  							
  							alert('17');
  						} // for
  						alert('18');


		  				
		  				alert('calling fetchPersonRequestCallback()');
					  	flashobj.fetchPersonRequestCallback(returnData);
					  	alert('fetchPersonRequestCallback getResponse() ends');
				  	}//getResponse
				  	
			  	}//fetchPerson
			  	
			  	fetchPerson(objParam);
			  }
		]]>
		</script>
   	</mx:XML> 
</mx:XMLListCollection>
